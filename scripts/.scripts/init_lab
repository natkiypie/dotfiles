#!/bin/bash

if [ $1 ]
then

  #check for ssh
  ssh="$(echo $1 | grep -E @ | cut -f 1 -d ':')"
  if [ $ssh ]
  then
    protocol="$(echo $1 | grep :// | sed -e's,^\(.*://\).*,\1,g')"
    url="$(echo ${1/$protocol/})"
    pathext="$(echo $url | grep / | cut -d: -f2-)"
    prefix="$(echo $url | cut -f 1 -d '@')"

    # check for valid SSH URL
    if [ $prefix ]
    then
      path="$(echo "$pathext" | cut -f 1 -d '.')"
      proj_dir="$(echo "$path" | cut -f 2 -d '/')"
    else
      echo "This is not a valid url."
      exit 1
    fi
  else

    # use HTTPS instead
    protocol="$(echo $1 | grep :// | sed -e's,^\(.*://\).*,\1,g')"

    # check for valid URL
    if [ $protocol ]
    then
      url="$(echo ${1/$protocol/})"
      path="$(echo $url | grep / | cut -d/ -f2-)"
      proj_dir="$(echo $path | grep / | cut -d/ -f2-)"
    else
      echo "This is not a valid url."
      exit 1
    fi
  fi

  
  # user's home directory
  home_dir="$(echo $HOME)"
  
  # check that labs directory exists
  labs_dir_exists="$(locate -l 1 "$home_dir/201*/lab*")"
  
  if [ $labs_dir_exists ]
  then
    labs_dir=$labs_dir_exists
  else
    read -p "The path devstation/201/labs does not exist, would you like me to create it? Y/n: " confirm && 
    if [[ $confirm == [yY] || $confirm == [yY][eE][sS] || $confirm == "" ]]
    then
      labs_path=$home_dir/devstation/201/labs
      endpath=$labs_path/$proj_dir

      # create project directory
      mkdir -p $endpath
      clear && echo "Okay. I created $labs_path" && sleep 2 && clear
    else
      read -p "Where would you like me to create your project? " response
      labs_dir=$response
      endpath=$home_dir/$response/$proj_dir

      # create project directory
      mkdir -p $endpath
    fi
  fi
  
  # retrieve configuration files
  wget https://raw.githubusercontent.com/DevStation-COCC/bend-201d3/master/configs/.gitignore https://raw.githubusercontent.com/DevStation-COCC/bend-201d3/master/configs/.eslintrc.json https://raw.githubusercontent.com/angular/angular.js/master/LICENSE https://raw.githubusercontent.com/DevStation-COCC/bend-201d3/master/class-02/demo/reset.css
  
  # make project directories
  mkdir $endpath/js $endpath/css $endpath/img
  
  # make project files
  touch $endpath/README.md $endpath/index.html $endpath/js/app.js $endpath/css/style.css
  
  # move configuration files into project directory
  mv LICENSE .gitignore .eslintrc.json $endpath
  mv reset.css $endpath/css/
  
  # write project name to README file
  echo "# $proj_dir" >> $endpath/README.md
  
  # add use strict to JS file
  echo "'use strict';
  " >> $endpath/js/app.js
  
  # add HTML boilerplate
  echo "<!DOCTYPE html>
  <html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title></title>
    <link rel="stylesheet" href="./css/reset.css">
    <link rel="stylesheet" href="./css/style.css">
  </head>
  <body>
  </body>
  </html>
  " >> $endpath/index.html
  
  # initialize project as Git repository
  git -C $endpath init 
  
  # stage changes
  git -C $endpath add .
  
  # commit changes
  git -C $endpath commit -m "Initialize repository."
  
  # set up remote repository using SSH
  git -C $endpath remote add origin git@github.com:$path.git
  
  # push to project master branch
  git -C $endpath push -u origin master

fi
